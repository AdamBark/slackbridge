package main

import (
	"encoding/json"
	"fmt"
	"log"
	"os"
	"strconv"
	"strings"
)

func main() {
	f, err := os.Open("emoji.json")
	if err != nil {
		log.Fatal(err)
	}
	defer f.Close()
	dec := json.NewDecoder(f)
	var allEmoji []emojiEntry
	if err := dec.Decode(&allEmoji); err != nil {
		log.Fatal(err)
	}

	fmt.Println("// This file was generated by external/emoji-data/main.go - do not edit it manually")
	fmt.Println("package bridge")
	fmt.Println("")

	fmt.Println("var emoji = map[string]string{")

	for _, e := range allEmoji {
		if strings.Contains(e.Unified, "-") {
			continue
		}
		for _, name := range e.ShortNames {
			i, err := strconv.ParseInt(e.Unified, 16, 32)
			if err != nil {
				log.Fatalf("Error parsing emoji rune: %v", err)
			}
			fmt.Printf(`%s":%s:": string(%d),%s`, "\t", name, i, "\n")
			if name == "smile" {
				fmt.Printf(`%s":%s:": string(%d),%s`, "\t", "simple_smile", i, "\n")
			}
		}
	}

	fmt.Println("}")
}

type emojiEntry struct {
	ShortNames []string `json:"short_names"`
	Unified    string   `json:"unified"`
}
